{"ast":null,"code":"var _jsxFileName = \"/Users/lance/Desktop/Bootcamp-Code/canvas-projects/shop-shop/client/src/pages/Success.js\";\nimport React, { useEffect, useMutation } from 'react';\nimport Jumbotron from '../components/Jumbotron/index';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\nimport Home from './Home';\nexport function Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n  useEffect(() => {\n    async function saveOrder() {\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n\n      if (products.length) {\n        const {\n          data\n        } = await addOrder({\n          variables: {\n            products\n          }\n        });\n        const productData = data.addOrder.products;\n        productData.forEach(item => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign(Home);\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Success!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Thank you for your purchase!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"You will now be redirected to the homepage\")));\n}\n;","map":{"version":3,"sources":["/Users/lance/Desktop/Bootcamp-Code/canvas-projects/shop-shop/client/src/pages/Success.js"],"names":["React","useEffect","useMutation","Jumbotron","ADD_ORDER","idbPromise","Home","Success","addOrder","saveOrder","then","products","dispatch","type","UPDATE_PRODUCTS","length","data","variables","productData","forEach","item","setTimeout","window","location","assign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACtB,QAAM,CAACC,QAAD,IAAaN,WAAW,CAACE,SAAD,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,SAAf,GAA2B;AACvBJ,MAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,CAAV,CAA8BK,IAA9B,CAAoCC,QAAD,IAAc;AAC7CC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEC,eADD;AAELH,UAAAA,QAAQ,EAAEA;AAFL,SAAD,CAAR;AAIH,OALD;;AAOA,UAAIA,QAAQ,CAACI,MAAb,EAAqB;AACjB,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAAC;AAAES,UAAAA,SAAS,EAAE;AAAEN,YAAAA;AAAF;AAAb,SAAD,CAA/B;AACA,cAAMO,WAAW,GAAGF,IAAI,CAACR,QAAL,CAAcG,QAAlC;AAEAO,QAAAA,WAAW,CAACC,OAAZ,CAAqBC,IAAD,IAAU;AAC1Bf,UAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmBe,IAAnB,CAAV;AACH,SAFD;AAGH;;AAEDC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBlB,IAAvB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;;AAEDG,IAAAA,SAAS;AACZ,GAxBQ,EAwBN,CAACD,QAAD,CAxBM,CAAT;AA0BA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDALJ,CADJ,CADJ;AAaH;AAAA","sourcesContent":["import React, { useEffect, useMutation } from 'react';\nimport Jumbotron from '../components/Jumbotron/index';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\nimport Home from './Home';\n\nexport function Success() {\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n        async function saveOrder() {\n            idbPromise('products', 'get').then((products) => {\n                dispatch({\n                    type: UPDATE_PRODUCTS,\n                    products: products\n                });\n            });\n\n            if (products.length) {\n                const { data } = await addOrder({ variables: { products } });\n                const productData = data.addOrder.products;\n\n                productData.forEach((item) => {\n                    idbPromise('cart', 'delete', item);\n                });\n            }\n\n            setTimeout(() => {\n                window.location.assign(Home)\n            }, 3000);\n        }\n\n        saveOrder();\n    }, [addOrder]);\n\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Success!</h1>\n                <h2>\n                    Thank you for your purchase!\n                </h2>\n                <h2>\n                    You will now be redirected to the homepage\n                </h2>\n            </Jumbotron>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}